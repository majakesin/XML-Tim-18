version: "3.7"
services:

  chat-manager:
    build: ./ChatManager
    image: chat
    container_name: chat
    restart: on-failure
    networks:
      - demo
    ports:
      - 8083:8080
    environment:
      DATABASE_USERNAME: us_chat
      DATABASE_PASSWORD: password-chat
      DATABASE_DOMAIN: mysql-db
      DATABASE_SCHEMA: chat_db
    depends_on: 
      - mysql-db

  request_manager:
    build: ./AdRequestManager
    image: request
    container_name: request
    restart: on-failure
    networks:
      - demo
    ports:
      - 8082:8080
    environment:
      DATABASE_USERNAME: us_request
      DATABASE_PASSWORD: password-request
      DATABASE_DOMAIN: mysql-db
      DATABASE_SCHEMA: request_db
    depends_on: 
      - mysql-db

  comment-manager:
    build: ./CommentManager
    image: comment-manager
    container_name: comment-manager
    restart: on-failure
    networks:
      - demo
    ports:
      - 8081:8081
    environment:
      DATABASE_USERNAME: us_comment
      DATABASE_PASSWORD: password-comment
      DATABASE_DOMAIN: mysql-db
      DATABASE_SCHEMA: comment_db
    depends_on: 
      - mysql-db

  mysql-db:
    image: mysql:8.0.19
    command: --default-authentication-plugin=mysql_native_password
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: SuperRootPassword1
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: main
      MYSQL_USER: admin
      MYSQL_PASSWOR: AdminPassword1
    ports:
      - 3307:3306
    networks:
      - demo
    volumes:
      - ./dockerScript/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-db-data:/var/lib/mysql-db

volumes:
  mysql-db-data:

networks:
  demo:
    name: demo
    driver: bridge
